name: CI # Main workflow
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
env:
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4 
      - name: Build  
        run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
          include-hidden-files: true
  Lint:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Execute Linting
        uses: super-linter/super-linter/slim@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true  
  Docker:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: ghcr.io/${{ github.actor }}/micronaut-app2:1.0-${{ github.sha }},ghcr.io/${{ github.actor }}/micronaut-app2:latest
  Component-test:
    runs-on: ubuntu-latest
    needs: [Docker]
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Execute Test
        run: bash ci/component-test.sh
  Performance-test:
    runs-on: ubuntu-latest
    needs: [Docker]
    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Execute Test
        run: bash ci/performance-test.sh
